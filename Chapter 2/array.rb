# 루비의 배열과 해시는 색인된 컬렉션(indexed collection)이다.
# 둘 다 키(key)를 이용해서 접근할 수 있는 객체 모음이다.
# 해시에서는 키값으로 어떤 객체를 사용해도 무방하지만, 배열은 정수만 사용할 수 있다.
# 배열과 해시 모두 새로운 요소를 담기 위해 공간이 더 필요하면 필요한 만큼 스스로 확장한다.
# 일반적으로 배열에 접근하는 것이 더 효율적이지만, 해시는 배열보다 좀 더 유연하다는 장점이 있다.
# 배열과 해시 모두 어떤 타입의 객체라도 함께 저장할 수 있다.

# 대괄호 사이에 객체들을 나열하는 방식(배열 리터럴)을 이용해서 새로운 배열을 생성하고, 초기화할 수 있다.
# 특정 배열이 포함하는 각 객체에 접근하기 위해서는 대괄호 사이에 인덱스를 적어준다.
# 배열의 인덱스는 0부터 시작한다.

a = [ 1, 'cat', 3.14 ]
puts "The first element is #{a[0]}"
a[2] = nil
puts "The array is now #{a.inspect}"

# 루비에서 nil은 '아무것도 아님'을 표현하는 하나의 객체이다.

# 단어의 배열을 만들 때, 모든 단어를 따옴표로 묶고 사이사이에 쉼표를 넣는 대신 %w를 이용할 수 있다.

a = [ 'ant', 'bee', 'cat', 'dog', 'elk' ]
puts a[0] # => "ant"
puts a[3] # => "dog"

b = %w{ ant bee cat dog elk }
puts b[0] # => "ant"
puts b[3] # => "dog"
