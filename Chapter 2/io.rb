# puts는 줄 바꿈 문자를 문자열의 끝 부분에 더해서 출력한다.
# print는 줄 바꿈 문자 없이 문자열만 출력한다.
# 둘 다 어떤 I/O 객체에든 쓸 수 있도록 되어 있지만, 기본적으로는 표준 출력에 출력한다.

# printf는 자주 접할 또 다른 출력 함수다. printf는 매개 변수를 특정 형식 문자열에 따라서 제어하여 출력해 준다.

printf("Number: %5.2f,\nString: %s\n", 1.23, "hello")

# 실행 결과
# Number:  1.23,
# String: hello

# 앞선 예제에서 printf에 사용한 형식 문자열 "Number: %5.2f,\nString: %s\n"은 부동소수점(전체적으로 다섯 글자로 맞추고, 소수점 아래 두 자리만 표시한다)과 문자열로 치환된다. 형식 문자열에 포함된 줄 바꿈 문자(\n)는 출력할 위치를 다음 줄로 이동시킨다.

# 프로그램이 입력을 받는 방법은 여러 가지가 있겠지만, 그중 가장 고전적인 것은 gets 메서드를 사용하는 방법이다. gets 메서드는 프로그램의 표준 입력 스트림에서 다음 줄을 반환한다.

line = gets
print line

# gets는 입력이 종료되면 nil을 반환하기 때문에 반복 조건으로 직접 사용할 수도 있다. 다음 예제에서 while의 종료 조건이 대입문이라는 점에 주목하자. 즉 gets의 값이 변수 line에 저장되고, 그 값이 nil이나 false이면 반복문은 종료된다.

while line = gets
  print line
end
